<div>
    @if (UserService.CurrentChat.State == WorkItemState.Ready)
    {
        @foreach (var message in UserService.CurrentChat.Messages)
        {
            <ChatMessageView Message="message" />
        }
    }
    else
    {
        <div style="display: flex; align-items: center; justify-content: center; min-height: 100%; height: auto;" class="flex-grow-1">
            <MudProgressCircular Indeterminate="true" />
        </div>
    }
</div>


@code {
    [Inject] private IUserService UserService { get; set; } = null!;
    [Inject] private IJSRuntime JS { get; set; } = null!;
    [Inject] private IUpdateService UpdateService { get; set; } = null!;

    WorkItemChat? lastChat;

    protected override void OnInitialized()
    {
        UpdateService.OnWorkItemUpdate += StateHasChanged;
    }

    public void Dispose()
    {
        UpdateService.OnWorkItemUpdate -= StateHasChanged;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (UserService.CurrentChat != lastChat)
        {
            lastChat = UserService.CurrentChat;
            await JS.InvokeVoidAsync("setupScrollListener", "chatContainer");
            await JS.InvokeVoidAsync("updateScroll", "chatContainer");
        }
        else
        {
            await JS.InvokeVoidAsync("updateScroll", "chatContainer");
        }

    }

}