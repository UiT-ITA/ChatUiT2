<div>
    @foreach (var message in UserService.CurrentChat.Messages)
    {
        <ChatMessageView Message="message" />
    }
</div>


@code {
    [Inject] private IUserService UserService { get; set; } = null!;
    [Inject] private IJSRuntime JS { get; set; } = null!;

    WorkItemChat? lastChat;

    protected override void OnInitialized()
    {
        UserService.OnUpdate += StateHasChanged;
    }

    public void Dispose()
    {
        UserService.OnUpdate -= StateHasChanged;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (UserService.CurrentChat != lastChat)
        {
            lastChat = UserService.CurrentChat;
            await JS.InvokeVoidAsync("setupScrollListener", "chatContainer");
            await JS.InvokeVoidAsync("updateScroll", "chatContainer");
        }
        else
        {
            await JS.InvokeVoidAsync("updateScroll", "chatContainer");
        }

    }

}