<div id="chatContainer" style="overflow-y: auto; height: 100%; padding-top:48px;">
    <div style="@(GetChatContainerStyle() + "height: 100%;")" class="pt-1">
        
        @if (UserService.CurrentChat.Messages.Count == 0 && UserService.CurrentChat.State == WorkItemState.Ready)
        {
            <div style="display: flex; align-items: center; justify-content: center; min-height: 100%; height: auto;" class="flex-grow-1">
                <ChatSettingsView IncludeHeader IncludeInstructions />
            </div>
        }
        else
        {
            <ChatConversationView />
        }
    </div>
</div>

<div style="@GetChatContainerStyle()">

    <ChatInputView />
</div>

@code {
    [Inject] private IUserService UserService { get; set; } = null!;
    [Inject] private IUpdateService UpdateService { get; set; } = null!;

    protected override void OnInitialized()
    {
        UpdateService.OnWorkItemUpdate += StateHasChanged;
        UpdateService.OnChatMessageUpdate += StateHasChanged;
        base.OnInitialized();
    }

    public void Dispose()
    {
        UpdateService.OnWorkItemUpdate -= StateHasChanged;
        UpdateService.OnChatMessageUpdate -= StateHasChanged;
    }

    private string GetChatContainerStyle()
    {
        string widthStyle = "";
        switch (UserService.ChatWidth)
        {
            case ChatWidth.Small:
                widthStyle = "max-width: 800px;";
                break;
            case ChatWidth.Medium:
                widthStyle = "max-width: 1200px;";
                break;
            case ChatWidth.Large:
                widthStyle = "max-width: 1600px;";
                break;
        }

        return $"margin: 0 auto; {widthStyle} width: 100%;";
    }

}
